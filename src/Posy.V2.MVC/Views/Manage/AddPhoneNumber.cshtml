@using Posy.V2.Infra.CrossCutting.Common.Resources
@model Posy.V2.Infra.CrossCutting.Identity.Model.AddPhoneNumberViewModel
@{
    Layout = "~/Views/Shared/_Account.cshtml";
    ViewBag.Title = UIConfigLogin.AdicionarTelefone;
}
<h2>@ViewBag.Title</h2>
@using (Html.BeginForm("AddPhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>@UIConfigLogin.AdicioneUmNumero</h4>
    <hr />
    @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
    <div class="form-group">
        @Html.LabelFor(m => m.Number, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Number, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <input type="submit" value="@UIConfigLogin.EnviarCodigoDeVerificacao" class="btn btn-primary btn-lg btn-block" />
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            $('form').bind('invalid-form.validate', function (error, element) {
                fnError(element.errorList[0].message);
            });
        });
    </script>
    @if (!ViewData.ModelState.IsValid)
    {
        <script type="text/javascript">
            var errors = @Html.Raw(
                Json.Encode(
                    string.Join(
                        Environment.NewLine,
                        ViewData.ModelState
                                .Where(x => x.Value.Errors.Count > 0)
                                .SelectMany(x => x.Value.Errors)
                                .Select(error => error.ErrorMessage))
                    )
            );
            fnError(errors);
        </script>
    }
}
